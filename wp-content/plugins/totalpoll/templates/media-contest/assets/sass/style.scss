// Extra small screen / phone
$screen-xs: 480px !default;
$screen-xs-min: $screen-xs !default;
$screen-phone: $screen-xs-min !default;

// Small screen / tablet
$screen-sm: 768px !default;
$screen-sm-min: $screen-sm !default;
$screen-tablet: $screen-sm-min !default;

// Medium screen / desktop
$screen-md: 992px !default;
$screen-md-min: $screen-md !default;
$screen-desktop: $screen-md-min !default;

// Large screen / wide desktop
$screen-lg: 1200px !default;
$screen-lg-min: $screen-lg !default;
$screen-lg-desktop: $screen-lg-min !default;

// So media queries don't overlap when required, provide a maximum
$screen-xs-max: ($screen-sm-min - 1) !default;
$screen-sm-max: ($screen-md-min - 1) !default;
$screen-md-max: ($screen-lg-min - 1) !default;

@mixin clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin keyframes($name) {
  @-webkit-keyframes #{$name} {
    @content;
  }
  @-moz-keyframes #{$name} {
    @content;
  }
  @-ms-keyframes #{$name} {
    @content;
  }
  @keyframes #{$name} {
    @content;
  }
}

@include keyframes(votes-bar) {
  from {
    -webkit-transform: scaleX(0);
    -moz-transform: scaleX(0);
    -ms-transform: scaleX(0);
    -o-transform: scaleX(0);
    transform: scaleX(0);
  }

  to {
    -webkit-transform: scaleX(1);
    -moz-transform: scaleX(1);
    -ms-transform: scaleX(1);
    -o-transform: scaleX(1);
    transform: scaleX(1);
  }
}

/* VARIABLES */
$startColor: unquote("<?php echo $this->option('results', 'bar', 'color:start'); ?>");
$endColor: unquote("<?php echo $this->option('results', 'bar', 'color:end'); ?>");

___PREFIX___.totalpoll-poll-container {

  $border-radius: unquote("<?php echo $this->option('general', 'other', 'border-radius'); ?>");
  $animation-duration: unquote("<?php echo $this->option('general', 'other', 'animation'); ?>");

  line-height: unquote("<?php echo $this->option('typography', 'general', 'line-height'); ?>");
  font-family: unquote("<?php echo $this->option('typography', 'general', 'font-family'); ?>");
  font-size: unquote("<?php echo $this->option('typography', 'general', 'font-size'); ?>");

  padding: unquote("<?php echo $this->option('general', 'container', 'padding'); ?>");

  * {
    box-sizing: border-box;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    -o-box-sizing: border-box;

    line-height: inherit;
    font-family: inherit;
    font-size: inherit;
  }

  /* Reset */
  & {
    div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, font, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, audio, canvas, details, figcaption, figure, footer, header, hgroup, mark, menu, meter, nav, output, progress, section, summary, time, video {
      border: 0;
      outline: 0;
      vertical-align: baseline;
      background-color: transparent;
      margin: 0;
      padding: 0;
    }
    body {
      line-height: 1;
    }
    article, aside, dialog, figure, footer, header, hgroup, nav, section, blockquote {
      display: block;
    }
    ul, ol {
      list-style: none;
    }
    blockquote, q {
      quotes: none;
    }
    blockquote:before, blockquote:after, q:before, q:after {
      content: none;
    }
    ins {
      text-decoration: underline;
    }
    del {
      text-decoration: line-through;
    }
    mark {
      background: none;
    }
    abbr[title], dfn[title] {
      border-bottom: 1px dotted #000;
      cursor: help;
    }
    table {
      border-collapse: collapse;
      border-spacing: 0;
    }
    hr {
      display: block;
      height: 1px;
      border: 0;
      border-top: 1px solid #ccc;
      margin: 1em 0;
      padding: 0;
    }
    input[type=submit], input[type=button], button {
      margin: 0;
      padding: 0;
    }
    input, select, img {
      vertical-align: middle;
    }
    video, audio {
      vertical-align: bottom;
    }
    img {
      max-width: 100%;
    }
    li {
      list-style: none inside
    }
    ul:before, li:before, ul:after, li:after {
      display: none;
      content: ""
    }
  }

  .totalpoll-error-message {
    padding: 1em;
    margin-bottom: 1em;
    color: unquote("<?php echo $this->option('general', 'messages', 'color'); ?>");
    background-color: unquote("<?php echo $this->option('general', 'messages', 'background'); ?>");
    border: 1px solid unquote("<?php echo $this->option('general', 'messages', 'border'); ?>");
    border-radius: $border-radius;
  }

  .totalpoll-question {
    text-align: center;
    font-weight: bold;
    font-size: unquote("<?php echo $this->option('general', 'question', 'font-size'); ?>");
    margin-bottom: unquote("<?php echo $this->option('general', 'question', 'margin-bottom'); ?>");
    border: 0;
    padding: 0;
  }

  .totalpoll-choices {
    margin: 0 -0.8em;

    &-row {
      text-align: center;
      letter-spacing: -1em;

      * {
        letter-spacing: normal;
      }

      .totalpoll-choice-container {
        padding: unquote("<?php echo $this->option('choices', 'general', 'vertical-padding'); ?>") unquote("<?php echo $this->option('choices', 'general', 'horizontal-padding'); ?>");
        overflow: hidden;
        display: inline-block;
        vertical-align: top;

        .totalpoll-choice {
          display: block;

          &-text-type {
            .totalpoll-choice-label {
              border-radius: $border-radius;
            }
          }

          .totalpoll-choice-checkbox {
            display: none;
          }

          &-media {
            border: 1px solid unquote("<?php echo $this->option('choices', 'default', 'border:normal'); ?>");
            position: relative;
            border-top-right-radius: $border-radius;
            border-top-left-radius: $border-radius;

            a {
              display: block;
              position: relative;
              background: unquote("<?php echo $this->option('choices', 'default', 'media-background'); ?>");
              border-top-right-radius: $border-radius;
              border-top-left-radius: $border-radius;
              pointer-events: none;

              .totalpoll-choice-overlay {
                position: absolute;
                top: 0;
                right: 0;
                bottom: 0;
                left: 0;
                opacity: 0;
                transition: opacity .25s ease-in-out;
                -webkit-transition: opacity .25s ease-in-out;
                -moz-transition: opacity .25s ease-in-out;
                -o-transition: opacity .25s ease-in-out;
                border-top-right-radius: $border-radius;
                border-top-left-radius: $border-radius;

                &-image {
                  background: url(unquote("<?php echo $this->asset('assets/images/magnify.png'); ?>")) rgba(0, 0, 0, 0.5) no-repeat center;
                  background-size: auto 30%;
                }

                &-video {
                  background: url(unquote("<?php echo $this->asset('assets/images/play.png'); ?>")) rgba(0, 0, 0, 0.5) no-repeat center;
                  background-size: auto 30%;
                }
              }

              .totalpoll-video-hidden-content {
                display: none;
              }

              &:hover {
                .totalpoll-choice-overlay {
                  opacity: 0.8;
                }
              }

              img {
                max-width: 100%;
                padding: unquote("<?php echo $this->option('choices', 'general', 'image-padding'); ?>");
                display: block;
                margin: 0 auto;
                border-top-right-radius: $border-radius;
                border-top-left-radius: $border-radius;
              }

              &.totalpoll-supports-full, &.totalpoll-display-video {
                pointer-events: auto;
              }
            }

            audio.totalpoll-audio-player {
              width: 100%;
              padding: 0 10px;
              margin: 10px 0;
              opacity: 0.65;
              transition: opacity 0.25s;
              -webkit-transition: opacity 0.25s;
              -moz-transition: opacity 0.25s;
              -o-transition: opacity 0.25s;

              &:hover {
                cursor: pointer;
              }
            }
          }

          &-label {
            padding: unquote("<?php echo $this->option('choices', 'general', 'padding'); ?>");
            border: 1px solid unquote("<?php echo $this->option('choices', 'default', 'border:normal'); ?>");
            margin-top: -1px;
            background: unquote("<?php echo $this->option('choices', 'default', 'background:normal'); ?>");
            text-align: unquote("<?php echo $this->option('choices', 'general', 'text-align'); ?>");
            color: unquote("<?php echo $this->option('choices', 'default', 'color:normal'); ?>");
            border-bottom-right-radius: $border-radius;
            border-bottom-left-radius: $border-radius;
            cursor: pointer;
            display: block;
          }

          &:hover {
            audio.totalpoll-audio-player {
              opacity: 1;
            }
          }

          &.totalpoll-choice-selected {
            .totalpoll-choice-media {
              border-color: unquote("<?php echo $this->option('choices', 'checked', 'border:normal'); ?>");
            }

            .totalpoll-choice-label {
              color: unquote("<?php echo $this->option('choices', 'checked', 'color:normal'); ?>");
              background-color: unquote("<?php echo $this->option('choices', 'checked', 'background:normal'); ?>");
              border-color: unquote("<?php echo $this->option('choices', 'checked', 'border:normal'); ?>");
            }

            &:hover {
              .totalpoll-choice-media {
                border-color: unquote("<?php echo $this->option('choices', 'checked', 'border:hover'); ?>");
              }

              .totalpoll-choice-label {
                color: unquote("<?php echo $this->option('choices', 'checked', 'color:hover'); ?>");
                background-color: unquote("<?php echo $this->option('choices', 'checked', 'background:hover'); ?>");
                border-color: unquote("<?php echo $this->option('choices', 'checked', 'border:hover'); ?>");
              }
            }
          }
        }
      }
    }
  }

  .totalpoll-view {

    &-vote {
      .totalpoll-choice {
        &:hover {
          cursor: pointer;

          .totalpoll-choice-media {
            border-color: unquote("<?php echo $this->option('choices', 'default', 'border:hover'); ?>");
          }

          .totalpoll-choice-label {
            color: unquote("<?php echo $this->option('choices', 'default', 'color:hover'); ?>");
            background-color: unquote("<?php echo $this->option('choices', 'default', 'background:hover'); ?>");
            border-color: unquote("<?php echo $this->option('choices', 'default', 'border:hover'); ?>");
          }
        }
      }
    }

    &-results {
      .totalpoll-choice {
        &-text-type {
          .totalpoll-choice-label {
            border-top-left-radius: 0!important;
            border-top-right-radius: 0!important;
          }
        }

        &-media {
          a {
            cursor: default;

            .totalpoll-choice-overlay {
              cursor: pointer;
            }
          }
        }

        &-label {
          position: relative;

          .totalpoll-result-text {
            font-size: unquote("<?php echo $this->option('results', 'text', 'font-size'); ?>")!important;
            font-weight: unquote("<?php echo $this->option('results', 'text', 'font-weight'); ?>");
            color: unquote("<?php echo $this->option('results', 'text', 'color'); ?>");
          }

          .totalpoll-result-progress-container {
            position: absolute;
            left: 0;
            top: 0;
            right: 0;
            height: unquote("<?php echo $this->option('results', 'bar', 'height'); ?>");
            background: unquote("<?php echo $this->option('results', 'bar', 'bar-background'); ?>");
            margin: 0 -1px;

            .totalpoll-result-progress {
              height: unquote("<?php echo $this->option('results', 'bar', 'height'); ?>");

              background: $startColor;
              background: -moz-linear-gradient(left, $startColor 0%, $endColor 100%);
              background: -webkit-gradient(linear, left top, right top, color-stop(0%, $startColor), color-stop(100%, $endColor));
              background: -webkit-linear-gradient(left, $startColor 0%, $endColor 100%);
              background: -o-linear-gradient(left, $startColor 0%, $endColor 100%);
              background: -ms-linear-gradient(left, $startColor 0%, $endColor 100%);
              background: linear-gradient(to right, $startColor 0%, $endColor 100%);
              filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$startColor}', endColorstr='#{$endColor}', GradientType=1);

              -webkit-animation-fill-mode: both;
              -moz-animation-fill-mode: both;
              -o-animation-fill-mode: both;
              animation-fill-mode: both;

              -webkit-transform-origin: left;
              -moz-transform-origin: left;
              -ms-transform-origin: left;
              -o-transform-origin: left;
              transform-origin: left;

              -webkit-animation: votes-bar #{$animation-duration}ms ease-out;
              -o-animation: votes-bar #{$animation-duration}ms ease-out;
              animation: votes-bar #{$animation-duration}ms ease-out;
            }
          }
        }
      }
    }
  }

  .totalpoll-fields {
    margin: 1em 0;

    .totalpoll-field-wrapper {

      label {
        display: block;
        margin-bottom: 1rem;
      }

      .totalpoll-fields-field {
        border-radius: $border-radius;
        margin-right: 5px;
      }

      .totalpoll-field-error {
        margin: 0.5em 0 1em;
        padding: 0.8em;
        border: 1px solid unquote("<?php echo $this->option('general', 'container', 'border'); ?>");
        color: unquote("<?php echo $this->option('general', 'messages', 'color'); ?>");
        border-radius: $border-radius;
      }

      + .totalpoll-field-wrapper {
        margin-top: 1.5em;
      }

    }

    &-field {
      width: 100%;

      &[type=checkbox], &[type=radio] {
        width: auto;
      }
    }

  }

  /** BUTTONS **/
  .totalpoll-buttons {
    text-align: unquote("<?php echo $this->option('buttons', 'general', 'align'); ?>");
    margin: 1em -0.8em 0;

    .totalpoll-button {
      display: inline-block;
      padding: unquote("<?php echo $this->option('buttons', 'general', 'padding'); ?>");
      min-width: 100px;
      font-weight: unquote("<?php echo $this->option('buttons', 'general', 'font-weight'); ?>");
      color: unquote("<?php echo $this->option('buttons', 'default', 'color:normal'); ?>");
      background: unquote("<?php echo $this->option('buttons', 'default', 'background:normal'); ?>");
      border: 1px solid unquote("<?php echo $this->option('buttons', 'default', 'border:normal'); ?>");
      line-height: 1;
      text-decoration: none;
      margin: 0 10px;
      border-radius: $border-radius;

      @media all and (max-width: $screen-sm-min) {
        width: 100%;
        margin: 10px 0;
      }

      &:hover, &:focus, &:active {
        color: unquote("<?php echo $this->option('buttons', 'default', 'color:hover'); ?>");
        background-color: unquote("<?php echo $this->option('buttons', 'default', 'background:hover'); ?>");
        border-color: unquote("<?php echo $this->option('buttons', 'default', 'border:hover'); ?>");
      }

      &.totalpoll-button-primary {
        color: unquote("<?php echo $this->option('buttons', 'primary', 'color:normal'); ?>");
        background-color: unquote("<?php echo $this->option('buttons', 'primary', 'background:normal'); ?>");
        border: 1px solid unquote("<?php echo $this->option('buttons', 'primary', 'border:normal'); ?>");

        &:hover, &:focus, &:active {
          background-color: unquote("<?php echo $this->option('buttons', 'primary', 'background:hover'); ?>");
          border-color: unquote("<?php echo $this->option('buttons', 'primary', 'border:hover'); ?>");
          color: unquote("<?php echo $this->option('buttons', 'primary', 'color:hover'); ?>");
        }
      }

      &.totalpoll-button-link {

      }

      &[disabled] {
        opacity: 0.5;
        cursor: not-allowed;
      }
    }

    .totalpoll-buttons-pagination {
      padding: 1em;
      margin: 0 0.8em 1em;
      border: 1px solid unquote("<?php echo $this->option('general', 'container', 'border-color'); ?>");
      border-radius: $border-radius;
      @include clearfix;
    }
  }

  @media all and (max-width: $screen-sm-min) {
    .totalpoll-choices {
      .totalpoll-choice-container {
        width: 100%!important;
      }
    }
  }
}

___PREFIX___.totalpoll-poll-container.totalpoll-rtl {
  .totalpoll-view-results {
    .totalpoll-choice-label {
      .totalpoll-result-progress-container {
        .totalpoll-result-progress {
          background: $startColor;
          background: -moz-linear-gradient(right, $startColor 0%, $endColor 100%);
          background: -webkit-gradient(linear, right top, left top, color-stop(0%, $startColor), color-stop(100%, $endColor));
          background: -webkit-linear-gradient(right, $startColor 0%, $endColor 100%);
          background: -o-linear-gradient(right, $startColor 0%, $endColor 100%);
          background: -ms-linear-gradient(right, $startColor 0%, $endColor 100%);
          background: linear-gradient(to left, $startColor 0%, $endColor 100%);
          filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$startColor}', endColorstr='#{$endColor}', GradientType=1);

          -webkit-animation-fill-mode: both;
          -moz-animation-fill-mode: both;
          -o-animation-fill-mode: both;
          animation-fill-mode: both;

          -webkit-transform-origin: right;
          -moz-transform-origin: right;
          -ms-transform-origin: right;
          -o-transform-origin: right;
          transform-origin: right;
        }
      }
    }
  }

  .totalpoll-fields {
    .totalpoll-field-wrapper {
      .totalpoll-fields-field {
        margin-right: 0;
        margin-left: 5px;
      }
    }
  }
}
